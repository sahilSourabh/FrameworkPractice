<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="3" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-01-06T18:34:50 IST" name="Suite" finished-at="2024-01-06T18:35:37 IST" duration-ms="46322">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidationsTest.LoginErrorValidation()[pri:0, instance:testingframework.Tests.ErrorValidationsTest@383dc82c]" name="LoginErrorValidation" class="testingframework.Tests.ErrorValidationsTest"/>
      </group> <!-- ErrorHandling -->
    </groups>
    <test started-at="2024-01-06T18:34:50 IST" name="Error Validation Test" finished-at="2024-01-06T18:35:11 IST" duration-ms="21089">
      <class name="testingframework.Tests.ErrorValidationsTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testingframework.Tests.ErrorValidationsTest@383dc82c]" started-at="2024-01-06T18:34:50 IST" name="launchApplication" finished-at="2024-01-06T18:34:53 IST" duration-ms="2531" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="LoginErrorValidation()[pri:0, instance:testingframework.Tests.ErrorValidationsTest@383dc82c]" started-at="2024-01-06T18:34:53 IST" name="LoginErrorValidation" finished-at="2024-01-06T18:34:55 IST" duration-ms="1736" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email or password]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email or password]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at testingframework.Tests.ErrorValidationsTest.LoginErrorValidation(ErrorValidationsTest.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testingframework.Tests.ErrorValidationsTest@383dc82c]" started-at="2024-01-06T18:34:55 IST" name="tearDown" finished-at="2024-01-06T18:34:57 IST" duration-ms="2213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testingframework.Tests.ErrorValidationsTest@383dc82c]" started-at="2024-01-06T18:34:57 IST" name="launchApplication" finished-at="2024-01-06T18:35:01 IST" duration-ms="3103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="ProductErrorValidation()[pri:0, instance:testingframework.Tests.ErrorValidationsTest@383dc82c]" started-at="2024-01-06T18:35:01 IST" name="ProductErrorValidation" finished-at="2024-01-06T18:35:09 IST" duration-ms="8477" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Incorrect Product name : expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Incorrect Product name : expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at testingframework.Tests.ErrorValidationsTest.ProductErrorValidation(ErrorValidationsTest.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testingframework.Tests.ErrorValidationsTest@383dc82c]" started-at="2024-01-06T18:35:09 IST" name="tearDown" finished-at="2024-01-06T18:35:11 IST" duration-ms="2278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testingframework.Tests.ErrorValidationsTest -->
    </test> <!-- Error Validation Test -->
    <test started-at="2024-01-06T18:34:50 IST" name="Submit Order Test" finished-at="2024-01-06T18:35:37 IST" duration-ms="46322">
      <class name="testingframework.Tests.SubmitOrderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testingframework.Tests.SubmitOrderTest@28cda624]" started-at="2024-01-06T18:34:51 IST" name="launchApplication" finished-at="2024-01-06T18:34:54 IST" duration-ms="3452" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="SubmitOrder(java.util.HashMap)[pri:0, instance:testingframework.Tests.SubmitOrderTest@28cda624]" started-at="2024-01-06T18:34:54 IST" name="SubmitOrder" data-provider="getData" finished-at="2024-01-06T18:35:07 IST" duration-ms="13027" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Avos@1234, product=ZARA COAT 3, username=AvosD@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SubmitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testingframework.Tests.SubmitOrderTest@28cda624]" started-at="2024-01-06T18:35:07 IST" name="tearDown" finished-at="2024-01-06T18:35:09 IST" duration-ms="2131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testingframework.Tests.SubmitOrderTest@28cda624]" started-at="2024-01-06T18:35:09 IST" name="launchApplication" finished-at="2024-01-06T18:35:11 IST" duration-ms="1755" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="SubmitOrder(java.util.HashMap)[pri:0, instance:testingframework.Tests.SubmitOrderTest@28cda624]" started-at="2024-01-06T18:35:11 IST" name="SubmitOrder" data-provider="getData" finished-at="2024-01-06T18:35:25 IST" duration-ms="13551" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Acekazuki@123, product=ACE SWAGS, username=ace_kazuki@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SubmitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testingframework.Tests.SubmitOrderTest@28cda624]" started-at="2024-01-06T18:35:25 IST" name="tearDown" finished-at="2024-01-06T18:35:27 IST" duration-ms="2192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testingframework.Tests.SubmitOrderTest@28cda624]" started-at="2024-01-06T18:35:27 IST" name="launchApplication" finished-at="2024-01-06T18:35:30 IST" duration-ms="2996" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="orderHistoryTest()[pri:0, instance:testingframework.Tests.SubmitOrderTest@28cda624]" started-at="2024-01-06T18:35:30 IST" name="orderHistoryTest" finished-at="2024-01-06T18:35:34 IST" depends-on-methods="testingframework.Tests.SubmitOrderTest.SubmitOrder" duration-ms="4659" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testingframework.Tests.SubmitOrderTest@28cda624]" started-at="2024-01-06T18:35:34 IST" name="tearDown" finished-at="2024-01-06T18:35:37 IST" duration-ms="2184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testingframework.Tests.SubmitOrderTest -->
    </test> <!-- Submit Order Test -->
  </suite> <!-- Suite -->
</testng-results>
